local unicode = require("unicode")
local computer = require("computer")
local com = require("component")
local event = require("event")
local fs = require("filesystem")
local shell = require("shell")
local serialization = require("serialization")

-- Загрузка inspect.lua
if not fs.exists("/lib/inspect.lua") then
    shell.execute("wget -q https://raw.githubusercontent.com/kikito/inspect.lua/master/inspect.lua /lib/inspect.lua")
end
local inspect = require("inspect")

-- Компоненты
local me = com.isAvailable("me_interface") and com.me_interface or error("ME интерфейс не подключен")
local pim = com.isAvailable("pim") and com.pim or error("PIM не подключен")
local gpu = com.gpu
local w, h = 80, 25
gpu.setResolution(w, h)

-- Константы
local CURRENCY_NAME = "Эмы"
local SHOP_CONFIG_PATH = "shop_config.cfg"
local BALANCES_PATH = "balances.cfg"
local ADMIN_USERS = {"fafagod1k"} -- Замените на ваш ник
local DEFAULT_PRICE = 10 -- Цена по умолчанию для новых предметов
local MAX_BUY_AMOUNT = 1000 -- Максимальное количество для покупки за раз

-- Корректные логотипы магазина
local logoTop = [[
███████╗ █████╗ ███████╗ █████╗ ███████╗████████╗ ██████╗ ██████╗ ███████╗
██╔════╝██╔══██╗██╔════╝██╔══██╗██╔════╝╚══██╔══╝██╔═══██╗██╔══██╗██╔════╝
█████╗  ███████║█████╗  ███████║███████╗   ██║   ██║   ██║██████╔╝█████╗  
██╔══╝  ██╔══██║██╔══╝  ██╔══██║╚════██║   ██║   ██║   ██║██╔══██╗██╔══╝  
██║     ██║  ██║██║     ██║  ██║███████║   ██║   ╚██████╔╝██║  ██║███████╗
╚═╝     ╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝╚══════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝
]]

local logoBottom = [[
███╗   ███╗ ██████╗ ███████╗██╗  ██╗██╗██╗     ██╗     
████╗ ████║██╔════╝ ██╔════╝██║ ██╔╝██║██║     ██║     
██╔████╔██║██║      ███████╗█████╔╝ ██║██║     ██║     
██║╚██╔╝██║██║      ╚════██║██╔═██╗ ██║██║     ██║     
██║ ╚═╝ ██║╚██████╗ ███████║██║  ██╗██║███████╗███████╗
╚═╝     ╚═╝ ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝╚══════╝╚══════╝
]]

-- Настройки магазина по умолчанию
local defaultConfig = {
    items = {},
    sellItems = {}
}

-- Загрузка/сохранение конфигурации
local function loadConfig()
    if fs.exists(SHOP_CONFIG_PATH) then
        local file = io.open(SHOP_CONFIG_PATH, "r")
        local data = file:read("*a")
        file:close()
        return serialization.unserialize(data) or defaultConfig
    end
    return defaultConfig
end

local function saveConfig(config)
    local file = io.open(SHOP_CONFIG_PATH, "w")
    file:write(serialization.serialize(config))
    file:close()
end

-- Балансы игроков
local function loadBalances()
    if fs.exists(BALANCES_PATH) then
        local file = io.open(BALANCES_PATH, "r")
        local data = file:read("*a")
        file:close()
        return serialization.unserialize(data) or {}
    end
    return {}
end

local function saveBalances(balances)
    local file = io.open(BALANCES_PATH, "w")
    file:write(serialization.serialize(balances))
    file:close()
end

-- Вспомогательная функция для подсчета размера таблицы
local function table_size(t)
    if not t then return 0 end
    local count = 0
    for _ in pairs(t) do count = count + 1 end
    return count
end

-- Сканирование ME системы для добавления предметов
local function scanMEForItems(config)
    if not config then config = defaultConfig end
    
    local itemsInME = me.getItemsInNetwork()
    local addedCount = 0
    
    for _, item in ipairs(itemsInME) do
        if item and item.name and item.label then
            -- Используем безопасное получение dmg
            local dmg = item.dmg or 0
            local key = item.name .. ":" .. dmg
            
            -- Добавляем только новые предметы
            if not config.items[key] then
                config.items[key] = DEFAULT_PRICE
                addedCount = addedCount + 1
            end
        end
    end
    
    return addedCount, config
end

-- Получение информации о предмете с кэшированием
local itemInfoCache = {}
local function getItemInfo(itemKey)
    if not itemKey then return {label = "Неизвестный предмет", name = "unknown", damage = 0} end
    
    -- Используем кэш, чтобы не запрашивать информацию многократно
    if itemInfoCache[itemKey] then
        return itemInfoCache[itemKey]
    end
    
    local parts = {}
    for part in itemKey:gmatch("[^:]+") do
        table.insert(parts, part)
    end
    
    if #parts < 2 then
        itemInfoCache[itemKey] = {label = "Неизвестный предмет", name = "unknown", damage = 0}
        return itemInfoCache[itemKey]
    end
    
    local itemID = parts[1]
    local itemDmg = tonumber(parts[2]) or 0
    
    local success, itemInfo = pcall(me.getItemDetail, {name = itemID, damage = itemDmg})
    if success and itemInfo then
        itemInfo.label = itemInfo.label or itemID
        itemInfoCache[itemKey] = itemInfo
        return itemInfo
    end
    
    -- Если не удалось получить информацию, создаем базовую
    itemInfoCache[itemKey] = {
        label = itemID:gsub("_", " "):gsub("(%a)(%S*)", function(a, b) return a:upper()..b:lower() end),
        name = itemID,
        damage = itemDmg
    }
    
    return itemInfoCache[itemKey]
end

-- Переменные состояния
local config = loadConfig()
local balances = loadBalances()
local currentPlayer = nil
local playerBalance = 0
local shopItems = {}
local state = "MAIN" -- MAIN, BUY, SELL, ADMIN, GOODBYE, BUY_AMOUNT, SEARCH
local page = 1
local itemsPerPage = 8
local editingItem = nil -- Редактируемый предмет
local priceBuffer = "" -- Буфер для ввода цены
local lastScanTime = 0
local goodbyeTimer = 0
local searchQuery = "" -- Текст поискового запроса
local selectedItem = nil -- Выбранный для покупки предмет
local buyAmount = 1 -- Количество для покупки
local buyAmountBuffer = "1" -- Буфер ввода количества

-- Глобальные настройки GPU
local defBG, defFG = 0x000000, 0xFFFFFF
gpu.setBackground(defBG)
gpu.setForeground(defFG)
gpu.fill(1, 1, w, h, " ")

-- Утилиты
local function formatNumber(num)
    if not num then return "0" end
    if num < 1000 then
        return tostring(math.floor(num))
    end
    
    local symbols = {"", "K", "M", "B", "T"}
    local formattedNum = num
    local symbolIndex = 1

    while formattedNum >= 1000 and symbolIndex < #symbols do
        formattedNum = formattedNum / 1000
        symbolIndex = symbolIndex + 1
    end

    if symbolIndex > 1 then
        return string.format("%.1f%s", formattedNum, symbols[symbolIndex])
    end

    return tostring(math.floor(num))
end

local function center(y, text, color)
    if not text then return end
    color = color or defFG
    gpu.setForeground(color)
    local x = math.floor((w - unicode.len(text)) / 2)
    gpu.set(x, y, text)
    gpu.setForeground(defFG)
end

local function drawButton(x, y, width, height, text, bgColor, fgColor)
    if not text then return end
    local bg = bgColor or 0x333333
    local fg = fgColor or 0xFFFFFF
    
    gpu.setBackground(bg)
    gpu.setForeground(fg)
    gpu.fill(x, y, width, height, " ")
    local textX = x + math.floor((width - unicode.len(text)) / 2)
    local textY = y + math.floor(height/2)
    gpu.set(textX, textY, text)
    gpu.setBackground(defBG)
    gpu.setForeground(defFG)
    return x, y, x + width - 1, y + height - 1
end

-- Функция для отображения логотипа
local function drawLogo()
    -- Отображение надписи FAFASTORE
    local topLines = {}
    for line in logoTop:gmatch("[^\n]+") do
        table.insert(topLines, line)
    end
    
    local topStartY = 4
    for i, line in ipairs(topLines) do
        local x = math.floor((w - unicode.len(line)) / 2)
        gpu.setForeground(0x1E90FF) -- Синий (DodgerBlue)
        gpu.set(x, topStartY + i - 1, line)
    end
    
    -- Отображение надписи mcskill
    local bottomLines = {}
    for line in logoBottom:gmatch("[^\n]+") do
        table.insert(bottomLines, line)
    end
    
    local bottomStartY = topStartY + #topLines
    for i, line in ipairs(bottomLines) do
        local x = math.floor((w - unicode.len(line)) / 2)
        gpu.setForeground(0x9370DB) -- Фиолетовый
        gpu.set(x, bottomStartY + i - 1, line)
    end
    
    gpu.setForeground(defFG)
end

 -- Отрисовка экрана прощания
local function drawGoodbyeScreen()
    gpu.fill(1, 1, w, h, " ")
    
    -- Улучшенное сердечко
  local heart = {
            "    ██    ██    ",
            "   ████  ████   ",
            "  ███████████  ",
            "  ███████████  ",
            "   █████████   ",
            "    ███████    ",
            "     █████     ",
            "      ███      ",
            "       █       "
        }
    
    local heartHeight = #heart
    local startY = math.floor(h/2) - heartHeight - 3
    
    for i, line in ipairs(heart) do
        local x = math.floor((w - unicode.len(line)) / 2)
        gpu.setForeground(0xFF69B4) -- Ярко-розовый
        gpu.set(x, startY + i, line)
    end
    
    gpu.setForeground(0xFFFFFF)
    center(startY + heartHeight + 2, "Спасибо за покупку, приходите еще!", 0xFFFFFF)
    
    local remaining = math.ceil(5 - (computer.uptime() - goodbyeTimer))
    center(startY + heartHeight + 4, "Возвращение в главное меню через: " .. remaining .. " сек.", 0xAAAAAA)
end

-- Отрисовка интерфейса
local function drawMainScreen()
    gpu.fill(1, 1, w, h, " ")
    
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "МАГАЗИН FAFASTORE", 0xFFFFFF)
    
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    else
        gpu.setForeground(0xFF0000)
        gpu.set(2, 1, "Игрок не обнаружен")
    end
    
    drawLogo()
    
    local centerX = math.floor(w/2)
    drawButton(centerX - 35, 16, 30, 3, "1. Купить предметы", 0xF5DEB3, 0x000000)
    drawButton(centerX + 5, 16, 30, 3, "2. Продать предметы", 0xF5DEB3, 0x000000)
    
    center(20, "Авторы магазина: fafagod1k и другие", 0xAAAAAA)
    
    drawButton(w - 15, h, 15, 1, "3. Админ", 0xFF4500, 0xFFFFFF)
    
    gpu.setForeground(0xAAAAAA)
    gpu.set(1, h, "Стоя на PIM, используйте сенсорный экран или клавиши 1-3")
end

local function drawBuyScreen()
    gpu.fill(1, 1, w, h, " ")
    
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "ПОКУПКА ПРЕДМЕТОВ", 0xFFFFFF)
    
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    else
        gpu.setForeground(0xFF0000)
        gpu.set(2, 1, "Игрок не обнаружен")
    end
    
    gpu.setBackground(defBG)
    
    -- Поисковая строка
    local searchText = "Поиск: " .. searchQuery
    gpu.set(3, 3, searchText)
    if searchQuery == "" then
        gpu.setForeground(0xAAAAAA)
        gpu.set(3 + unicode.len("Поиск: "), 3, "введите название...")
        gpu.setForeground(defFG)
    end
    
    -- Кнопки поиска
    if searchQuery ~= "" then
        drawButton(50, 3, 15, 1, "Очистить поиск", 0x444444)
    else
        drawButton(50, 3, 15, 1, "Поиск", 0x444444)
    end
    
    -- Список товаров
    shopItems = {}
    for itemKey, price in pairs(config.items) do
        table.insert(shopItems, {key = itemKey, price = price})
    end
    
    -- Сортировка по названию
    table.sort(shopItems, function(a, b) 
        local infoA = getItemInfo(a.key)
        local infoB = getItemInfo(b.key)
        return (infoA.label or "ZZZ") < (infoB.label or "ZZZ")
    end)
    
    -- Фильтрация по поисковому запросу
    if searchQuery ~= "" then
        local filtered = {}
        local query = searchQuery:lower()
        for _, item in ipairs(shopItems) do
            local itemInfo = getItemInfo(item.key)
            if itemInfo.label:lower():find(query, 1, true) then
                table.insert(filtered, item)
            end
        end
        shopItems = filtered
    end
    
    local startY = 5
    local startIdx = (page - 1) * itemsPerPage + 1
    
    for i = startIdx, math.min(startIdx + itemsPerPage - 1, #shopItems) do
        local item = shopItems[i]
        local itemInfo = getItemInfo(item.key)
        local yPos = startY + (i - startIdx) * 2
        
        -- Отображение предмета
        gpu.setForeground(0xFFFFFF)
        gpu.set(3, yPos, itemInfo.label or "Неизвестный предмет")
        gpu.setForeground(0x00FF00)
        gpu.set(60, yPos, "Цена: " .. formatNumber(item.price) .. " " .. CURRENCY_NAME)
        
        -- Кнопка покупки
        local btnX, btnY, btnX2, btnY2 = drawButton(70, yPos, 8, 1, "Купить", 0xF5DEB3, 0x000000)
        shopItems[i].button = {btnX, btnY, btnX2, btnY2}
        
        -- Кнопка редактирования (для админа)
        if currentPlayer then
            local isAdmin = false
            for _, admin in ipairs(ADMIN_USERS) do
                if admin == currentPlayer then
                    isAdmin = true
                    break
                end
            end
            
            if isAdmin then
                local btnText = (editingItem == item.key) and "Отмена" or "Изменить"
                local editBtnX, editBtnY, editBtnX2, editBtnY2 = drawButton(55, yPos, 10, 1, btnText, 0xF5DEB3, 0x000000)
                shopItems[i].editButton = {editBtnX, editBtnY, editBtnX2, editBtnY2}
            end
        end
    end
    
    -- Навигация
    if page > 1 then
        drawButton(5, h - 2, 10, 1, "< Назад", 0xF5DEB3, 0x000000)
    end
    
    if #shopItems > page * itemsPerPage then
        drawButton(w - 15, h - 2, 10, 1, "Вперед >", 0xF5DEB3, 0x000000)
    end
    
    -- Отображение количества предметов
    center(h - 1, string.format("Страница %d из %d | Предметов: %d", page, math.ceil(#shopItems/itemsPerPage), #shopItems), 0xAAAAAA)
    
    -- Кнопка возврата
    drawButton(w - 10, h, 10, 1, "Назад", 0xFF4500)
    
    -- Отображение поля ввода для редактирования
    if editingItem then
        gpu.setBackground(0x333333)
        gpu.setForeground(0xFFFFFF)
        gpu.fill(30, h - 2, 20, 1, " ")
        gpu.set(30, h - 2, "Цена: " .. priceBuffer)
        gpu.setBackground(defBG)
        
        center(h - 1, "Введите новую цену и нажмите Enter", 0xFFFF00)
    end
end

-- Экран выбора количества
local function drawBuyAmountScreen()
    gpu.fill(1, 1, w, h, " ")
    
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "ВЫБОР КОЛИЧЕСТВА", 0xFFFFFF)
    
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    end
    
    gpu.setBackground(defBG)
    
    if selectedItem then
        local itemInfo = getItemInfo(selectedItem.key)
        local price = selectedItem.price
        local totalPrice = price * buyAmount
        
        -- Информация о предмете
        center(3, "Предмет: " .. itemInfo.label, 0xFFFFFF)
        center(4, "Цена за штуку: " .. formatNumber(price) .. " " .. CURRENCY_NAME, 0xFFFF00)
        
        -- Количество
        center(6, "Количество: " .. buyAmountBuffer, 0x00FF00)
        center(7, "Итоговая цена: " .. formatNumber(totalPrice) .. " " .. CURRENCY_NAME, 0x00FF00)
        
        -- Доступность в системе
        local itemDetail = me.getItemDetail({name = itemInfo.name, damage = itemInfo.damage})
        local available = itemDetail and itemDetail.qty or 0
        center(8, "Доступно в системе: " .. formatNumber(available), 0x00FF00)
        
        -- Кнопки количества
        drawButton(25, 10, 10, 3, "+1", 0x333333)
        drawButton(40, 10, 10, 3, "+10", 0x333333)
        drawButton(55, 10, 10, 3, "+100", 0x333333)
        
        -- Кнопки покупки
        drawButton(20, 14, 15, 3, "Купить", 0x00AA00)
        drawButton(45, 14, 15, 3, "Отмена", 0xAA0000)
        
        -- Инструкция
        center(18, "Используйте цифры для ввода количества", 0xAAAAAA)
        center(19, "Enter - подтвердить покупку | ESC - отмена", 0xAAAAAA)
    end
end

local function drawSellScreen()
    gpu.fill(1, 1, w, h, " ")
    
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "ПРОДАЖА ПРЕДМЕТОВ", 0xFFFFFF)
    
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    else
        gpu.setForeground(0xFF0000)
        gpu.set(2, 1, "Игрок не обнаружен")
    end
    
    gpu.setBackground(defBG)
    
    gpu.setForeground(0xFFFF00)
    center(3, "Доступно: " .. formatNumber(playerBalance) .. " " .. CURRENCY_NAME)
    
    -- Инструкция
    gpu.setForeground(0xAAAAAA)
    center(5, "Положите предметы для продажи в инвентарь", 0xAAAAAA)
    center(6, "и нажмите 'Продать все'", 0xAAAAAA)
    
    -- Кнопки
    drawButton(30, 8, 20, 3, "Продать все", 0xF5DEB3, 0x000000)
    drawButton(55, 8, 20, 3, "Сканировать", 0xF5DEB3, 0x000000)
    
    -- Список покупаемых предметов
    gpu.setForeground(0x00FF00)
    gpu.set(5, 12, "Магазин покупает:")
    
    local yPos = 14
    for itemKey, price in pairs(config.sellItems) do
        local itemInfo = getItemInfo(itemKey)
        
        gpu.setForeground(0xFFFFFF)
        gpu.set(5, yPos, "- " .. (itemInfo.label or "Неизвестный предмет"))
        gpu.setForeground(0xFFFF00)
        gpu.set(40, yPos, "Цена: " .. formatNumber(price) .. " " .. CURRENCY_NAME .. " за шт.")
        
        yPos = yPos + 1
        if yPos > h - 3 then break end
    end
    
    -- Кнопка возврата
    drawButton(w - 10, h, 10, 1, "Назад", 0xFF4500)
end

local function drawAdminPanel()
    gpu.fill(1, 1, w, h, " ")
    
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "АДМИНИСТРАТИВНАЯ ПАНЕЛЬ", 0xFFFFFF)
    
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    else
        gpu.setForeground(0xFF0000)
        gpu.set(2, 1, "Игрок не обнаружен")
    end
    
    gpu.setBackground(defBG)
    
    gpu.setForeground(0xFF00FF)
    center(3, "АДМИНИСТРАТОР: " .. currentPlayer, 0xFF00FF)
    
    -- Кнопки
    drawButton(5, 5, 25, 3, "Добавить для продажи", 0xF5DEB3, 0x000000)
    drawButton(35, 5, 30, 3, "Добавить для покупки", 0xF5DEB3, 0x000000)
    
    -- Дополнительные функции
    drawButton(5, 9, 20, 3, "Сканировать ME", 0xF5DEB3, 0x000000)
    drawButton(30, 9, 25, 3, "Сохранить конфиг", 0xF5DEB3, 0x000000)
    
    -- Статистика
    gpu.setForeground(0x00FF00)
    gpu.set(5, 13, "Статистика магазина:")
    
    gpu.setForeground(0xFFFFFF)
    gpu.set(5, 15, "Предметов для продажи: " .. table_size(config.items or {}))
    gpu.set(5, 16, "Предметов для покупки: " .. table_size(config.sellItems or {}))
    gpu.set(5, 17, "Последнее сканирование: " .. os.date("%H:%M:%S", lastScanTime))
    
    -- Кнопка возврата
    drawButton(w - 10, h, 10, 1, "Назад", 0xFF4500)
    
    -- Инструкция
    gpu.setForeground(0xAAAAAA)
    center(h - 1, "Для добавления предметов возьмите их в руку и нажмите кнопку", 0xAAAAAA)
end

-- Логика магазина
local function buyItem(itemKey, price, amount)
    amount = amount or 1
    if not currentPlayer then
        center(h - 1, "Игрок не обнаружен!", 0xFF0000)
        return false
    end
    
    if amount < 1 then
        center(h - 1, "Некорректное количество!", 0xFF0000)
        return false
    end
    
    if playerBalance < price * amount then
        center(h - 1, "Недостаточно средств!", 0xFF0000)
        computer.beep(1000, 0.5)
        return false
    end
    
    local itemInfo = getItemInfo(itemKey)
    
    -- Проверка наличия в ME
    local itemDetail = me.getItemDetail({name = itemInfo.name, damage = itemInfo.damage})
    if not itemDetail or itemDetail.qty < amount then
        center(h - 1, "Недостаточно товара в системе!", 0xFF0000)
        computer.beep(1000, 0.5)
        return false
    end
    
    -- Выдача предмета
    local success = me.exportItem({name = itemInfo.name, damage = itemInfo.damage}, "UP", amount)
    if success and success.size > 0 then
        local totalPrice = price * amount
        playerBalance = playerBalance - totalPrice
        balances[currentPlayer] = playerBalance
        saveBalances(balances)
        center(h - 1, string.format("Покупка успешна: %d x %s", amount, itemInfo.label), 0x00FF00)
        computer.beep(2000, 0.2)
        return true
    end
    
    center(h - 1, "Ошибка выдачи предмета!", 0xFF0000)
    computer.beep(1000, 0.5)
    return false
end

local function sellItems()
    if not currentPlayer then
        center(h - 1, "Игрок не обнаружен!", 0xFF0000)
        return false
    end
    
    if pim.getInventoryName() ~= "pim" then
        center(h - 1, "Игрок не обнаружен!", 0xFF0000)
        return false
    end
    
    local totalEarned = 0
    local itemsSold = 0
    local inventory = pim.getAllStacks(0)
    
    for slot, item in pairs(inventory) do
        if item then
            -- Безопасное получение dmg
            local dmg = item.dmg or 0
            local itemKey = item.id .. ":" .. dmg
            local sellPrice = config.sellItems[itemKey]
            
            if sellPrice then
                local amountToSell = item.qty
                local earned = amountToSell * sellPrice
                
                -- Изъятие предметов у игрока
                pim.pushItem("DOWN", slot, amountToSell)
                
                -- Начисление средств
                playerBalance = playerBalance + earned
                totalEarned = totalEarned + earned
                itemsSold = itemsSold + amountToSell
            end
        end
    end
    
    if itemsSold > 0 then
        balances[currentPlayer] = playerBalance
        saveBalances(balances)
        center(h - 1, string.format("Продано %d предметов на сумму %d %s", 
               itemsSold, totalEarned, CURRENCY_NAME), 0x00FF00)
        computer.beep(2000, 0.2)
        return true
    end
    
    center(h - 1, "Нет предметов для продажи!", 0xFFFF00)
    return false
end

local function addItemToConfig(isSellItem)
    if not currentPlayer then
        center(h - 1, "Игрок не обнаружен!", 0xFF0000)
        return
    end
    
    -- Проверка прав администратора
    local isAdmin = false
    for _, admin in ipairs(ADMIN_USERS) do
        if admin == currentPlayer then
            isAdmin = true
            break
        end
    end
    
    if not isAdmin then
        center(h - 1, "Доступ запрещен!", 0xFF0000)
        return
    end
    
    -- Получаем предмет в руке
    local item = nil
    local inventory = pim.getAllStacks(0)
    for slot, stack in pairs(inventory) do
        if stack and stack.id and slot == 0 then  -- Слот 0 обычно соответствует руке
            item = stack
            break
        end
    end
    
    if not item or not item.id then
        center(h - 1, "Возьмите предмет в руку и попробуйте снова!", 0xFF0000)
        return
    end
    
    -- Безопасное получение dmg
    local dmg = item.dmg or 0
    local itemKey = item.id .. ":" .. dmg
    local price = 10 -- Цена по умолчанию
    
    -- Получаем информацию о предмете
    local itemInfo = getItemInfo(itemKey)
    
    if isSellItem then
        config.sellItems[itemKey] = price
        center(h - 1, "Предмет добавлен для покупки: " .. (itemInfo.label or "предмет"), 0x00FF00)
    else
        config.items[itemKey] = price
        center(h - 1, "Предмет добавлен для продажи: " .. (itemInfo.label or "предмет"), 0x00FF00)
    end
    
    saveConfig(config)
end

-- Обработка событий
local function handleEvent(eventName, ...)
    local args = {...}
    
    if eventName == "interrupted" then
        gpu.setBackground(defBG)
        gpu.setForeground(defFG)
        gpu.fill(1, 1, w, h, " ")
        os.exit()
        return true
    end
    
    -- Вход/выход игрока
    if eventName == "player_on" then
        currentPlayer = args[1]
        playerBalance = balances[currentPlayer] or 0
        state = "MAIN"
        drawMainScreen()
    elseif eventName == "player_off" then
        state = "GOODBYE"
        goodbyeTimer = computer.uptime()
        drawGoodbyeScreen()
    end
    
    -- Обработка касаний
    if eventName == "touch" and currentPlayer then
        local _, x, y, button = ...
        
        -- Главный экран
        if state == "MAIN" then
            local centerX = math.floor(w/2)
            -- Кнопка покупки
            if y >= 16 and y <= 18 then
                if x >= centerX - 35 and x <= centerX - 5 then
                    state = "BUY"
                    page = 1
                    searchQuery = ""
                    drawBuyScreen()
                -- Кнопка продажи
                elseif x >= centerX + 5 and x <= centerX + 35 then
                    state = "SELL"
                    drawSellScreen()
                end
            end
            
            -- Кнопка администрирования
            if y == h and x >= w - 15 and x <= w then
                state = "ADMIN"
                drawAdminPanel()
            end
        end
        
        -- Экран покупки
        if state == "BUY" then
            -- Поисковая строка
            if y == 3 then
                if x >= 50 and x <= 65 then
                    if searchQuery ~= "" then
                        searchQuery = ""
                        page = 1
                        drawBuyScreen()
                    else
                        state = "SEARCH"
                    end
                end
            end
            
            -- Обработка кнопок предметов
            for i, item in ipairs(shopItems) do
                -- Кнопка покупки
                if item.button then
                    local btn = item.button
                    if x >= btn[1] and x <= btn[3] and y >= btn[2] and y <= btn[4] then
                        selectedItem = item
                        buyAmount = 1
                        buyAmountBuffer = "1"
                        state = "BUY_AMOUNT"
                        drawBuyAmountScreen()
                        break
                    end
                end
                
                -- Кнопка редактирования
                if item.editButton then
                    local btn = item.editButton
                    if x >= btn[1] and x <= btn[3] and y >= btn[2] and y <= btn[4] then
                        if editingItem == item.key then
                            editingItem = nil
                        else
                            editingItem = item.key
                            priceBuffer = tostring(item.price)
                        end
                        drawBuyScreen()
                        break
                    end
                end
            end
            
            -- Навигация
            if y >= h - 2 and y <= h then
                if x >= 5 and x <= 15 and page > 1 then
                    page = page - 1
                    drawBuyScreen()
                elseif x >= w - 15 and x <= w - 5 and #shopItems > page * itemsPerPage then
                    page = page + 1
                    drawBuyScreen()
                end
            end
            
            -- Кнопка возврата
            if y == h and x >= w - 10 and x <= w then
                state = "MAIN"
                editingItem = nil
                drawMainScreen()
            end
        end
        
        -- Экран выбора количества
        if state == "BUY_AMOUNT" and selectedItem then
            if y >= 10 and y <= 12 then
                if x >= 25 and x <= 35 then
                    buyAmount = math.min(buyAmount + 1, MAX_BUY_AMOUNT)
                    buyAmountBuffer = tostring(buyAmount)
                    drawBuyAmountScreen()
                elseif x >= 40 and x <= 50 then
                    buyAmount = math.min(buyAmount + 10, MAX_BUY_AMOUNT)
                    buyAmountBuffer = tostring(buyAmount)
                    drawBuyAmountScreen()
                elseif x >= 55 and x <= 65 then
                    buyAmount = math.min(buyAmount + 100, MAX_BUY_AMOUNT)
                    buyAmountBuffer = tostring(buyAmount)
                    drawBuyAmountScreen()
                end
            end
            
            if y >= 14 and y <= 16 then
                if x >= 20 and x <= 35 then
                    -- Покупка
                    if buyItem(selectedItem.key, selectedItem.price, buyAmount) then
                        state = "BUY"
                        drawBuyScreen()
                    end
                elseif x >= 45 and x <= 60 then
                    -- Отмена
                    state = "BUY"
                    drawBuyScreen()
                end
            end
        end
        
        -- Экран продажи
        if state == "SELL" then
            if y >= 8 and y <= 10 then
                if x >= 30 and x <= 50 then
                    sellItems()
                    os.sleep(1)
                    drawSellScreen() -- Обновляем экран после продажи
                elseif x >= 55 and x <= 75 then
                    -- Сканирование инвентаря
                    center(h - 1, "Сканирование...", 0xFFFF00)
                    sellItems()
                    drawSellScreen()
                end
            end
            
            -- Кнопка возврата
            if y == h and x >= w - 10 and x <= w then
                state = "MAIN"
                drawMainScreen()
            end
        end
        
        -- Админ-панель
        if state == "ADMIN" then
            if y >= 5 and y <= 7 then
                if x >= 5 and x <= 30 then
                    addItemToConfig(false) -- Добавить для продажи
                    drawAdminPanel() -- Обновляем экран
                elseif x >= 35 and x <= 65 then
                    addItemToConfig(true)  -- Добавить для покупки
                    drawAdminPanel() -- Обновляем экран
                end
            end
            
            -- Дополнительные функции
            if y >= 9 and y <= 11 then
                if x >= 5 and x <= 25 then
                    -- Сканирование ME системы
                    center(h - 1, "Сканирование ME...", 0xFFFF00)
                    local addedCount, newConfig = scanMEForItems(config)
                    if newConfig then config = newConfig end
                    saveConfig(config)
                    lastScanTime = os.time()
                    center(h - 1, "Добавлено " .. addedCount .. " новых предметов", 0x00FF00)
                    drawAdminPanel()
                elseif x >= 30 and x <= 55 then
                    -- Сохранение конфига
                    saveConfig(config)
                    center(h - 1, "Конфиг успешно сохранен", 0x00FF00)
                    drawAdminPanel() -- Обновляем экран
                end
            end
            
            -- Кнопка возврата
            if y == h and x >= w - 10 and x <= w then
                state = "MAIN"
                drawMainScreen()
            end
        end
    end
    
    -- Обработка клавиатуры
    if eventName == "key_down" and currentPlayer then
        local _, char, code = ...
        
        -- Быстрые клавиши в главном меню
        if state == "MAIN" then
            if char == 49 or code == 2 then -- 1
                state = "BUY"
                page = 1
                searchQuery = ""
                drawBuyScreen()
            elseif char == 50 or code == 3 then -- 2
                state = "SELL"
                drawSellScreen()
            elseif char == 51 or code == 4 then -- 3
                state = "ADMIN"
                drawAdminPanel()
            end
        end
        
        -- Навигация в меню покупки
        if state == "BUY" then
            if char == 27 then -- ESC
                state = "MAIN"
                editingItem = nil
                drawMainScreen()
            elseif char == 97 or code == 30 then -- A/Left
                if page > 1 then
                    page = page - 1
                    drawBuyScreen()
                end
            elseif char == 100 or code == 32 then -- D/Right
                if #shopItems > page * itemsPerPage then
                    page = page + 1
                    drawBuyScreen()
                end
            end
            
            -- Редактирование цены
            if editingItem then
                if char == 13 then -- Enter
                    local price = tonumber(priceBuffer)
                    if price and price > 0 then
                        config.items[editingItem] = price
                        saveConfig(config)
                        center(h - 1, "Цена обновлена!", 0x00FF00)
                        editingItem = nil
                        drawBuyScreen()
                    else
                        center(h - 1, "Некорректная цена!", 0xFF0000)
                    end
                elseif char == 8 then -- Backspace
                    priceBuffer = priceBuffer:sub(1, -2)
                    drawBuyScreen()
                elseif char >= 48 and char <= 57 then -- Цифры 0-9
                    priceBuffer = priceBuffer .. string.char(char)
                    drawBuyScreen()
                end
            end
        end
        
        -- Режим поиска
        if state == "SEARCH" then
            if char == 13 then -- Enter
                state = "BUY"
                page = 1
                drawBuyScreen()
            elseif char == 8 then -- Backspace
                searchQuery = searchQuery:sub(1, -2)
                drawBuyScreen()
            elseif char >= 32 and char <= 126 then -- Печатные символы
                searchQuery = searchQuery .. string.char(char)
                drawBuyScreen()
            end
        end
        
        -- Режим выбора количества
        if state == "BUY_AMOUNT" then
            if char == 13 then -- Enter
                buyAmount = tonumber(buyAmountBuffer) or buyAmount
                if buyAmount > 0 then
                    if buyItem(selectedItem.key, selectedItem.price, buyAmount) then
                        state = "BUY"
                        drawBuyScreen()
                    end
                end
            elseif char == 27 then -- ESC
                state = "BUY"
                drawBuyScreen()
            elseif char == 8 then -- Backspace
                buyAmountBuffer = buyAmountBuffer:sub(1, -2)
                if buyAmountBuffer == "" then buyAmountBuffer = "0" end
                buyAmount = tonumber(buyAmountBuffer) or 1
                drawBuyAmountScreen()
            elseif char >= 48 and char <= 57 then -- Цифры
                local newValue = buyAmountBuffer .. string.char(char)
                if tonumber(newValue) and tonumber(newValue) <= MAX_BUY_AMOUNT then
                    buyAmountBuffer = newValue
                    buyAmount = tonumber(buyAmountBuffer)
                    drawBuyAmountScreen()
                end
            end
        end
        
        -- Возврат в главное меню
        if char == 113 or code == 16 then -- Q
            state = "MAIN"
            editingItem = nil
            drawMainScreen()
        end
    end
end

-- Основной цикл
local function main()
    -- Первоначальное сканирование ME системы
    gpu.setBackground(defBG)
    gpu.setForeground(defFG)
    gpu.fill(1, 1, w, h, " ")
    
    center(math.floor(h/2), "Инициализация магазина FAFASTORE...", 0xFFFF00)
    center(math.floor(h/2)+1, "Сканирование ME системы...", 0xFFFF00)
    
    local addedCount, newConfig = scanMEForItems(config)
    if newConfig then config = newConfig end
    saveConfig(config)
    lastScanTime = os.time()
    
    config = loadConfig()
    
    drawMainScreen()
    
    while true do
        local e = {event.pull(0.5)} -- Ожидаем события с таймаутом 0.5 сек
        
        -- Проверка присутствия игрока
        if currentPlayer and state ~= "GOODBYE" then
            local invName = pim.getInventoryName()
            
            -- Если имя не совпадает с текущим игроком, значит игрок ушел
            if invName ~= currentPlayer then
                state = "GOODBYE"
                goodbyeTimer = computer.uptime()
                drawGoodbyeScreen()
            end
        end
        
        -- Обработка таймера для экрана прощания
        if state == "GOODBYE" then
            local currentTime = computer.uptime()
            local elapsed = currentTime - goodbyeTimer
            
            -- Обновляем таймер на экране
            drawGoodbyeScreen()
            
            -- Возвращаемся в главное меню через 5 секунд
            if elapsed >= 5 then
                currentPlayer = nil
                playerBalance = 0
                state = "MAIN"
                drawMainScreen()
            end
        end
        
        -- Обработка других событий
        if e[1] then
            handleEvent(table.unpack(e))
        end
    end
end

-- Запуск программы
main()
