local unicode = require("unicode")
local computer = require("computer")
local com = require("component")
local event = require("event")
local fs = require("filesystem")
local shell = require("shell")
local serialization = require("serialization")

-- Загрузка inspect.lua
if not fs.exists("/lib/inspect.lua") then
    shell.execute("wget -q https://raw.githubusercontent.com/kikito/inspect.lua/master/inspect.lua /lib/inspect.lua")
end
local inspect = require("inspect")

-- Компоненты
local me = com.isAvailable("me_interface") and com.me_interface or error("ME интерфейс не подключен")
local pim = com.isAvailable("pim") and com.pim or error("PIM не подключен")
local gpu = com.gpu
local w, h = 80, 25
gpu.setResolution(w, h)

-- Константы
local CURRENCY_NAME = "Эмы"
local BALANCES_PATH = "balances.cfg"
local ITEMS_FILE = "items.txt"
local DEFAULT_BUY_PRICE = 10 -- Цена покупки по умолчанию

-- Цены для пополнения баланса
local DEPOSIT_PRICES = {
    ["minecraft:iron_block"] = 0.9,      -- Железный блок
    ["minecraft:iron_ingot"] = 0.1,      -- Железный слиток
    -- Добавьте другие предметы по необходимости
}

-- Цвета
local defBG = 0x000000 -- черный
local defFG = 0xFFFFFF -- белый
local grayBG = 0x333333 -- серый фон
local lightGrayBG = 0x444444 -- светло-серый
local buttonBG = 0x555555 -- цвет кнопок калькулятора
local buttonActiveBG = 0x777777 -- активная кнопка

-- Корректные логотипы магазина
local logoTop = [[
███████╗ █████╗ ███████╗ █████╗ ███████╗████████╗ ██████╗ ██████╗ ███████╗
██╔════╝██╔══██╗██╔════╝██╔══██╗██╔════╝╚══██╔══╝██╔═══██╗██╔══██╗██╔════╝
█████╗  ███████║█████╗  ███████║███████╗   ██║   ██║   ██║██████╔╝█████╗  
██╔══╝  ██╔══██║██╔══╝  ██╔══██║╚════██║   ██║   ██║   ██║██╔══██╗██╔══╝  
██║     ██║  ██║██║     ██║  ██║███████║   ██║   ╚██████╔╝██║  ██║███████╗
╚═╝     ╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝╚══════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝
]]

local logoBottom = [[
███╗   ███╗ ██████╗ ███████╗██╗  ██╗██╗██╗     ██╗     
████╗ ████║██╔════╝ ██╔════╝██║ ██╔╝██║██║     ██║     
██╔████╔██║██║      ███████╗█████╔╝ ██║██║     ██║     
██║╚██╔╝██║██║      ╚════██║██╔═██╗ ██║██║     ██║     
██║ ╚═╝ ██║╚██████╗ ███████║██║  ██╗██║███████╗███████╗
╚═╝     ╚═╝ ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝╚══════╝╚══════╝
]]

-- Загрузка/сохранение балансов
local function loadBalances()
    if fs.exists(BALANCES_PATH) then
        local file = io.open(BALANCES_PATH, "r")
        local data = file:read("*a")
        file:close()
        return serialization.unserialize(data) or {}
    end
    return {}
end

local function saveBalances(balances)
    local file = io.open(BALANCES_PATH, "w")
    file:write(serialization.serialize(balances))
    file:close()
end

-- Загрузка предметов из файла
local function loadItemsFromFile()
    local items = {}
    if not fs.exists(ITEMS_FILE) then
        return items
    end
    
    local file = io.open(ITEMS_FILE, "r")
    for line in file:lines() do
        line = line:trim()
        if line ~= "" and not line:startswith("#") then
            local parts = {}
            for part in line:gmatch("[^;]+") do
                table.insert(parts, part:trim())
            end
            
            if #parts >= 4 then
                local name_damage = parts[1]
                local label = parts[2]
                local maxSize = tonumber(parts[3]) or 64
                local price = tonumber(parts[4]) or DEFAULT_BUY_PRICE
                
                -- Разбираем имя и damage
                local name, damageStr = name_damage:match("^([^@]+)@?(%d*)$")
                if name then
                    local damage = tonumber(damageStr) or 0
                    local key = name .. (damage > 0 and (":" .. damage) or "")
                    
                    items[key] = {
                        label = label,
                        name = name,
                        damage = damage,
                        maxSize = maxSize,
                        price = price,
                        amount = 0
                    }
                end
            end
        end
    end
    file:close()
    return items
end

-- Получение информации о предмете
local function getItemInfo(item)
    if not item or not item.name then 
        return {label = "Неизвестный предмет", name = "unknown", damage = 0, key = "unknown"}
    end
    
    -- Извлекаем базовое имя без damage
    local baseName = item.name:match("^([^@]+)") or item.name
    local dmg = item.damage or item.dmg or 0
    
    -- Формируем полный ключ
    local key = baseName .. (dmg > 0 and (":" .. dmg) or "")
    
    -- Используем label из предмета, если он есть, иначе используем имя
    local label = item.label or baseName
    
    return {
        label = label,
        name = baseName,
        damage = dmg,
        key = key
    }
end

-- Сканирование ME системы для получения доступных предметов
local function getAvailableItems()
    local availableItems = loadItemsFromFile()
    local itemsInME = me.getItemsInNetwork()
    
    for _, item in ipairs(itemsInME) do
        if item and item.name then
            local info = getItemInfo(item)
            if availableItems[info.key] then
                availableItems[info.key].amount = (availableItems[info.key].amount or 0) + (item.size or 0)
            end
        end
    end
    
    return availableItems
end

-- Глобальные настройки GPU
gpu.setBackground(defBG)
gpu.setForeground(defFG)
gpu.fill(1, 1, w, h, " ")

-- Утилиты
local function formatNumber(num)
    if not num then return "0" end
    if num < 1000 then
        return tostring(math.floor(num))
    end
    
    local symbols = {"", "тыс", "млн", "млрд", "трлн"}
    local formattedNum = num
    local symbolIndex = 1

    while formattedNum >= 1000 and symbolIndex < #symbols do
        formattedNum = formattedNum / 1000
        symbolIndex = symbolIndex + 1
    end

    if symbolIndex > 1 then
        return string.format("%.1f %s", formattedNum, symbols[symbolIndex])
    end

    return tostring(math.floor(num))
end

-- Форматирование чисел с пробелами для разделения тысяч
local function formatNumberWithSpaces(n)
    local s = tostring(math.floor(n))
    local res = ""
    local count = 0
    for i = #s, 1, -1 do
        res = s:sub(i, i) .. res
        count = count + 1
        if count % 3 == 0 and i > 1 then
            res = " " .. res
        end
    end
    return res
end

local function center(y, text, color)
    if not text then return end
    color = color or defFG
    gpu.setForeground(color)
    local x = math.floor((w - unicode.len(text)) / 2)
    gpu.set(x, y, text)
    gpu.setForeground(defFG)
end

local function drawButton(x, y, width, height, text, bgColor, fgColor)
    if not text then return end
    local bg = bgColor or 0x333333
    local fg = fgColor or 0xFFFFFF
    
    -- Сохраняем текущий фон
    local oldBg = gpu.getBackground()
    
    gpu.setBackground(bg)
    gpu.setForeground(fg)
    gpu.fill(x, y, width, height, " ")
    local textX = x + math.floor((width - unicode.len(text)) / 2)
    local textY = y + math.floor(height/2)
    gpu.set(textX, textY, text)
    
    -- Восстанавливаем фон
    gpu.setBackground(oldBg)
    gpu.setForeground(defFG)
    return x, y, x + width - 1, y + height - 1
end

-- Функция для отображение логотипа
local function drawLogo()
    -- Отображение надписи FAFASTORE
    local topLines = {}
    for line in logoTop:gmatch("[^\n]+") do
        table.insert(topLines, line)
    end
    
    local topStartY = 4
    for i, line in ipairs(topLines) do
        local x = math.floor((w - unicode.len(line)) / 2)
        gpu.setForeground(0x1E90FF) -- Синий (DodgerBlue)
        gpu.set(x, topStartY + i - 1, line)
    end
    
    -- Отображение надписи mcskill
    local bottomLines = {}
    for line in logoBottom:gmatch("[^\n]+") do
        table.insert(bottomLines, line)
    end
    
    local bottomStartY = topStartY + #topLines
    for i, line in ipairs(bottomLines) do
        local x = math.floor((w - unicode.len(line)) / 2)
        gpu.setForeground(0x9370DB) -- Фиолетовый
        gpu.set(x, bottomStartY + i - 1, line)
    end
    
    gpu.setForeground(defFG)
end

-- Отрисовка экрана прощания
local function drawGoodbyeScreen()
    gpu.setBackground(defBG)
    gpu.fill(1, 1, w, h, " ")
    
    -- Улучшенное сердечко
    local heart = {
        "    ██    ██    ",
        "   ████  ████   ",
        "  ███████████  ",
        "  ███████████  ",
        "   █████████   ",
        "    ███████    ",
        "     █████     ",
        "      ███      ",
        "       █       "
    }
    
    -- Расположение сердечка
    local heartHeight = #heart
    local startY = math.floor(h/2) - heartHeight - 3
    
    -- Рисуем сердечко
    for i, line in ipairs(heart) do
        local x = math.floor((w - unicode.len(line)) / 2)
        gpu.setForeground(0xFF69B4) -- Ярко-розовый
        gpu.set(x, startY + i, line)
    end
    
    -- Сообщение
    gpu.setForeground(0xFFFFFF)
    center(startY + heartHeight + 2, "Спасибо за покупку, приходите еще!", 0xFFFFFF)
    
    -- Таймер
    local remaining = math.ceil(5 - (computer.uptime() - goodbyeTimer))
    center(startY + heartHeight + 4, "Возвращение в главное меню через: " .. remaining .. " сек.", 0xAAAAAA)
end

-- Отрисовка интерфейса
local function drawMainScreen()
    gpu.setBackground(defBG)
    gpu.fill(1, 1, w, h, " ")
    
    -- Шапка
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "МАГАЗИН FAFASTORE", 0xFFFFFF)
    
    -- Информация о игроке
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    else
        gpu.setForeground(0xFF0000)
        gpu.set(2, 1, "Игрок не обнаружен")
    end
    
    -- Отображение логотипа
    drawLogo()
    
    -- Кнопки
    local centerX = math.floor(w/2)
    drawButton(centerX - 35, 16, 30, 3, "1. Купить предметы", 0xF5DEB3, 0x000000)
    drawButton(centerX + 5, 16, 30, 3, "2. Пополнить баланс", 0xF5DEB3, 0x000000)
    
    -- Авторы магазина
    center(20, "Авторы магазина: fafagod1k и другие", 0xAAAAAA)
    
    -- Инструкция
    gpu.setForeground(0xAAAAAA)
    gpu.set(1, h, "Стоя на PIM, используйте сенсорный экран или клавиши 1-2")
end

-- Глобальные переменные для поиска
local searchText = ""
local isSearching = false
local blinkState = true
local lastBlinkTime = 0
local blinkInterval = 0.5 -- интервал мигания в секундах

-- Переменные для экрана выбора количества
local selectedItem = nil
local quantityInput = "1"
local maxQuantity = 0

-- Переменные для экрана пополнения баланса
local depositItemsList = {}
local selectedDepositItem = nil
local depositQuantityInput = "0"

-- Функция для отображения каталога товаров
local function drawCatalog(y, items)
    -- Заголовки таблицы
    gpu.setForeground(0x00FF00)
    gpu.set(3, y, "Наименование")
    gpu.set(40, y, "Наличие")
    gpu.set(60, y, "Цена за шт.")
    y = y + 1
    
    -- Разделитель
    gpu.setForeground(0x444444)
    gpu.fill(3, y, w - 3, 1, "─")
    y = y + 1
    
    -- Список товаров
    for i, item in ipairs(items) do
        local name = item.label or "Неизвестный предмет"
        local amount = formatNumberWithSpaces(item.amount)
        local price = string.format("%.3f", item.price):gsub("%.", ",")
        
        -- Обрезаем длинные названия
        if unicode.len(name) > 35 then
            name = unicode.sub(name, 1, 32) .. "..."
        end
        
        -- Заливка строки серым фоном
        gpu.setBackground(grayBG)
        gpu.fill(1, y, w, 1, " ")
        
        gpu.setForeground(0xFFFFFF)
        gpu.set(3, y, name)
        gpu.setForeground(0xFFFF00)
        gpu.set(40, y, amount)
        gpu.setForeground(0x00FF00)
        gpu.set(60, y, price)
        
        y = y + 1
    end
    
    -- Восстанавливаем фон
    gpu.setBackground(grayBG)
    
    return y
end

local function drawBuyScreen()
    -- Устанавливаем серый фон для всего экрана
    gpu.setBackground(grayBG)
    gpu.fill(1, 1, w, h, " ")
    
    -- Шапка (черная)
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "ПОКУПКА ПРЕДМЕТОВ", 0xFFFFFF)
    
    -- Информация о игроке
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    else
        gpu.setForeground(0xFF0000)
        gpu.set(2, 1, "Игрок не обнаружен")
    end
    
    -- Узкая длинная строка поиска с серой рамкой и белым текстам
    local searchY = 3
    local searchWidth = w - 8  -- Отступы по 4 символа с каждой стороны
    local searchHeight = 1
    
    -- Рисуем серую рамку
    gpu.setBackground(lightGrayBG) -- Темно-серый фон
    gpu.fill(4, searchY, searchWidth, searchHeight, " ")
    
    -- Рамка вокруг
    gpu.setForeground(0x888888) -- Светло-серый цвет рамки
    gpu.fill(3, searchY-1, searchWidth+2, 1, "─")
    gpu.fill(3, searchY+searchHeight, searchWidth+2, 1, "─")
    gpu.fill(3, searchY, 1, searchHeight, "│")
    gpu.fill(3+searchWidth+1, searchY, 1, searchHeight, "│")
    
    -- Угловые символы
    gpu.set(3, searchY-1, "┌")
    gpu.set(3+searchWidth+1, searchY-1, "┐")
    gpu.set(3, searchY+searchHeight, "└")
    gpu.set(3+searchWidth+1, searchY+searchHeight, "┘")
    
    -- Текст внутри рамки с мигающим курсором
    local displayText = "Поиск: " .. searchText
    if isSearching and blinkState then
        displayText = displayText .. "_"
    end
    gpu.setForeground(0xFFFFFF) -- Белый текст
    gpu.set(5, searchY, displayText)
    
    -- Список товаров
    shopItems = {}
    for key, item in pairs(availableItems) do
        if item.amount > 0 then
            -- Фильтрация по поиску по всей строке
            if searchText == "" or 
               (item.label and item.label:lower():find(searchText:lower(), 1, true)) or
               (item.name and item.name:lower():find(searchText:lower(), 1, true)) then
                table.insert(shopItems, {key = key, item = item})
            end
        end
    end
    
    -- Сортировка по названию
    table.sort(shopItems, function(a, b) 
        return (a.item.label or "ZZZ") < (b.item.label or "ZZZ")
    end)
    
    local startY = searchY + 3  -- Начинаем ниже строки поиска
    local startIdx = (page - 1) * itemsPerPage + 1
    
    -- Сообщение если ничего не найдено
    if #shopItems == 0 then
        gpu.setBackground(grayBG)
        gpu.setForeground(0xFFFF00)
        center(math.floor(h/2), "Товары не найдены", 0xFFFF00)
        if searchText ~= "" then
            center(math.floor(h/2)+1, "Попробуйте изменить запрос", 0xAAAAAA)
        end
    else
        -- Отображение каталога
        local itemsToShow = {}
        for i = startIdx, math.min(startIdx + itemsPerPage - 1, #shopItems) do
            table.insert(itemsToShow, shopItems[i].item)
        end
        startY = drawCatalog(startY, itemsToShow)
    end
    
    -- Навигация
    gpu.setBackground(grayBG)
    if page > 1 then
        drawButton(5, h - 2, 10, 1, "< Назад", 0xF5DEB3, 0x000000)
    end
    
    if #shopItems > page * itemsPerPage then
        drawButton(w - 15, h - 2, 10, 1, "Вперед >", 0xF5DEB3, 0x000000)
    end
    
    -- Кнопка возврата
    drawButton(w - 10, h, 10, 1, "Назад", 0xFF4500)
    
    -- Подсказка по поиску
    gpu.setForeground(0xAAAAAA)
    gpu.set(1, h, "Нажмите F для поиска, Enter для подтверждения")
    
    -- Восстанавливаем фон
    gpu.setBackground(defBG)
end

-- Отрисовка экрана выбора количества
local function drawBuyItemScreen()
    if not selectedItem then
        state = "BUY"
        drawBuyScreen()
        return
    end
    
    gpu.setBackground(defBG)
    gpu.fill(1, 1, w, h, " ")
    
    -- Шапка
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, 1, " ")
    center(1, "ВЫБОР КОЛИЧЕСТВА", 0xFFFFFF)
    
    -- Информация о игроке
    if currentPlayer then
        gpu.setForeground(0x00FF00)
        gpu.set(2, 1, "Игрок: " .. currentPlayer)
        gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
    end
    
    gpu.setBackground(defBG)
    
    -- Информация о выбранном предмете
    gpu.setForeground(0xFFFF00)
    center(3, "Вы выбрали: " .. (selectedItem.label or "Неизвестный предмет"), 0xFFFF00)
    
    -- Детали предмета
    gpu.setForeground(0x00FF00)
    gpu.set(5, 5, "В наличии: " .. formatNumberWithSpaces(selectedItem.amount))
    gpu.set(40, 5, "Цена за шт.: " .. string.format("%.3f", selectedItem.price):gsub("%.", ","))
    gpu.set(5, 6, "Баланс: " .. formatNumber(playerBalance) .. " " .. CURRENCY_NAME)
    
    -- Ввод количества
    gpu.setForeground(0xFFFFFF)
    gpu.set(5, 8, "Введите количество:")
    
    -- Поле ввода количества
    gpu.setBackground(lightGrayBG)
    gpu.fill(5, 9, 20, 1, " ")
    gpu.set(6, 9, quantityInput)
    
    -- Клавиатура калькулятора
    local keys = {
        {"7", "8", "9"},
        {"4", "5", "6"},
        {"1", "2", "3"},
        {"0", "С", "←"}
    }
    
    local startX = 5
    local startY = 11
    local btnWidth = 5
    local btnHeight = 2
    local spacing = 1
    
    -- Рисуем клавиатуру
    for row = 1, 4 do
        for col = 1, 3 do
            local key = keys[row][col]
            if key then
                drawButton(
                    startX + (col-1)*(btnWidth + spacing), 
                    startY + (row-1)*(btnHeight + spacing), 
                    btnWidth, 
                    btnHeight, 
                    key, 
                    buttonBG
                )
            end
        end
    end
    
    -- Итоговая информация
    local quantity = tonumber(quantityInput) or 0
    local totalPrice = quantity * selectedItem.price
    
    gpu.setForeground(0x00FF00)
    gpu.set(40, 8, "Количество: " .. quantity)
    gpu.set(40, 9, "Общая стоимость: " .. string.format("%.3f", totalPrice):gsub("%.", ",") .. " " .. CURRENCY_NAME)
    gpu.set(40, 10, "Остаток на балансе: " .. formatNumber(playerBalance - totalPrice) .. " " .. CURRENCY_NAME)
    
    -- Кнопки действий
    drawButton(5, 20, 15, 3, "Купить", 0x00AA00, 0xFFFFFF)
    drawButton(25, 20, 15, 3, "Отмена", 0xAA0000, 0xFFFFFF)
    
    -- Кнопка возврата
    drawButton(w - 10, h, 10, 1, "Назад", 0xFF4500)
end

-- Функция для проверки инвентаря игрока
local function getPlayerInventory()
    local inventory = {}
    
    if not currentPlayer then return inventory end
    
    -- Проверяем каждый слот инвентаря игрока (включая горячую панель)
    for slot = 1, 36 do
        local item = pim.getStackInSlot(0, slot)
        if item and item.name then
            local info = getItemInfo(item)
            local key = info.key
            
            if not inventory[key] then
                inventory[key] = {
                    name = info.name,
                    damage = info.damage,
                    label = info.label,
                    amount = 0,
                    price = DEPOSIT_PRICES[info.name] or 0
                }
            end
            
            inventory[key].amount = inventory[key].amount + (item.size or 0)
        end
    end
    
    return inventory
end

-- Функция для отображения инвентаря игрока
local function drawPlayerInventory(y, items)
    -- Заголовки таблица
    gpu.setForeground(0x00FF00)
    gpu.set(3, y, "Наименование")
    gpu.set(40, y, "Количество")
    gpu.set(60, y, "Цена за шт.")
    y = y + 1
    
    -- Разделитель
    gpu.setForeground(0x444444)
    gpu.fill(3, y, w - 3, 1, "─")
    y = y + 1
    
    -- Список предметов
    for i, item in ipairs(items) do
        local name = item.label or "Неизвестный предмет"
        local amount = formatNumberWithSpaces(item.amount)
        local price = string.format("%.3f", item.price):gsub("%.", ",")
        
        -- Обрезаем длинные названия
        if unicode.len(name) > 35 then
            name = unicode.sub(name, 1, 32) .. "..."
        end
        
        -- Заливка строки серым фоном
        gpu.setBackground(grayBG)
    gpu.fill(1, y, w, 1, " ")
    
    gpu.setForeground(0xFFFFFF)
    gpu.set(3, y, name)
    gpu.setForeground(0xFFFF00)
    gpu.set(40, y, amount)
    gpu.setForeground(0x00FF00)
    gpu.set(60, y, price .. " " .. CURRENCY_NAME)
    
    y = y + 1
end

-- Восстанавливаем фон
gpu.setBackground(grayBG)

return y
end

-- Отрисовка экрана пополнения баланса
local function drawDepositScreen()
gpu.setBackground(defBG)
gpu.fill(1, 1, w, h, " ")

-- Шапка
gpu.setBackground(0x000000)
gpu.fill(1, 1, w, 1, " ")
center(1, "ПОПОЛНЕНИЕ БАЛАНСА", 0xFFFFFF)

-- Информация о игроке
if currentPlayer then
    gpu.setForeground(0x00FF00)
    gpu.set(2, 1, "Игрок: " .. currentPlayer)
    gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
else
    gpu.setForeground(0xFF0000)
    gpu.set(2, 1, "Игрок не обнаружен")
end

gpu.setBackground(defBG)

gpu.setForeground(0xFFFF00)
center(3, "Доступно: " .. formatNumber(playerBalance) .. " " .. CURRENCY_NAME)

-- Инструкция
gpu.setForeground(0xAAAAAA)
center(5, "Выберите предмет для пополнения баланса", 0xAAAAAA)

-- Получаем инвентарь игрока
local playerInventory = getPlayerInventory()
depositItemsList = {}

-- Фильтруем только те предметы, которые можно сдать
for key, item in pairs(playerInventory) do
    if item.price > 0 and item.amount > 0 then
        table.insert(depositItemsList, item)
    end
end

-- Сортировка по названию
table.sort(depositItemsList, function(a, b) 
    return (a.label or "ZZZ") < (b.label or "ZZZ")
end)

-- Отображаем инвентарь
local startY = 7
if #depositItemsList == 0 then
    gpu.setForeground(0xFFFF00)
    center(math.floor(h/2), "В инвентаре нет предметов для пополнения", 0xFFFF00)
else
    startY = drawPlayerInventory(startY, depositItemsList)
end

-- Кнопка возврата
drawButton(w - 10, h, 10, 1, "Назад", 0xFF4500)
end

-- Отрисовка экрана выбора количества для пополнения
local function drawDepositItemScreen()
if not selectedDepositItem then
    state = "DEPOSIT"
    drawDepositScreen()
    return
end

gpu.setBackground(defBG)
gpu.fill(1, 1, w, h, " ")

-- Шапка
gpu.setBackground(0x000000)
gpu.fill(1, 1, w, 1, " ")
center(1, "ВЫБОР КОЛИЧЕСТВА ДЛЯ ПОПОЛНЕНИЯ", 0xFFFFFF)

-- Информация о игроке
if currentPlayer then
    gpu.setForeground(0x00FF00)
    gpu.set(2, 1, "Игрок: " .. currentPlayer)
    gpu.set(w - unicode.len("Баланс: " .. formatNumber(playerBalance)) - 1, 1, "Баланс: " .. formatNumber(playerBalance))
end

gpu.setBackground(defBG)

-- Информация о выбранном предмете
gpu.setForeground(0xFFFF00)
center(3, "Вы выбрали: " .. (selectedDepositItem.label or "Неизвестный предмет"), 0xFFFF00)

-- Детали предмета
gpu.setForeground(0x00FF00)
gpu.set(5, 5, "В инвентаре: " .. formatNumberWithSpaces(selectedDepositItem.amount))
gpu.set(40, 5, "Цена за шт.: " .. string.format("%.3f", selectedDepositItem.price):gsub("%.", ",") .. " " .. CURRENCY_NAME)
gpu.set(5, 6, "Баланс: " .. formatNumber(playerBalance) .. " " .. CURRENCY_NAME)

-- Ввод количества
gpu.setForeground(0xFFFFFF)
gpu.set(5, 8, "Введите количество:")

-- Поле ввода количества
gpu.setBackground(lightGrayBG)
gpu.fill(5, 9, 20, 1, " ")
gpu.set(6, 9, depositQuantityInput)

-- Клавиатура калькулятора
local keys = {
    {"7", "8", "9"},
    {"4", "5", "6"},
    {"1", "2", "3"},
    {"0", "С", "←"}
}

local startX = 5
local startY = 11
local btnWidth = 5
local btnHeight = 2
local spacing = 1

-- Рисуем клавиатуру
for row = 1, 4 do
    for col = 1, 3 do
        local key = keys[row][col]
        if key then
            drawButton(
                startX + (col-1)*(btnWidth + spacing), 
                startY + (row-1)*(btnHeight + spacing), 
                btnWidth, 
                btnHeight, 
                key, 
                buttonBG
            )
        end
    end
end

-- Итоговая информация
local quantity = tonumber(depositQuantityInput) or 0
local totalEarned = quantity * selectedDepositItem.price

gpu.setForeground(0x00FF00)
gpu.set(40, 8, "Количество: " .. quantity)
gpu.set(40, 9, "Будет начислено: " .. string.format("%.3f", totalEarned):gsub("%.", ",") .. " " .. CURRENCY_NAME)
gpu.set(40, 10, "Итоговый баланс: " .. formatNumber(playerBalance + totalEarned) .. " " .. CURRENCY_NAME)

-- Кнопки действий
drawButton(5, 20, 15, 3, "Пополнить", 0x00AA00, 0xFFFFFF)
drawButton(25, 20, 15, 3, "Отмена", 0xAA0000, 0xFFFFFF)

-- Кнопка возврата
drawButton(w - 10, h, 10, 1, "Назад", 0xFF4500)
end

-- Логика магазина
local function buyItem(itemKey, quantity)
if not currentPlayer then
    center(h - 1, "Игрок не обнаружен!", 0xFF0000)
    return false
end

local item = availableItems[itemKey]
if not item then
    center(h - 1, "Предмет не найден!", 0xFF0000)
    return false
end

quantity = tonumber(quantity) or 1
    if quantity <= 0 then
        center(h - 1, "Некорректное количество!", 0xFF0000)
        computer.beep(1000, 0.5)
        return false
    end
    
    if quantity > item.amount then
        center(h - 1, "Недостаточно товара!", 0xFF0000)
        computer.beep(1000, 0.5)
        return false
    end
    
    local totalPrice = quantity * item.price
    if playerBalance < totalPrice then
        center(h - 1, "Недостаточно средств!", 0xFF0000)
        computer.beep(1000, 0.5)
        return false
    end
    
    -- Выдача предмета
    local success = me.exportItem({name = item.name, damage = item.damage}, "UP", quantity)
    if success and success.size > 0 then
        playerBalance = playerBalance - totalPrice
        balances[currentPlayer] = playerBalance
        saveBalances(balances)
        
        -- Обновляем количество
        item.amount = item.amount - quantity
        
        center(h - 1, "Покупка успешна: " .. quantity .. "x " .. (item.label or "предмет"), 0x00FF00)
        computer.beep(2000, 0.2)
        return true
    end
    
    center(h - 1, "Ошибка выдачи предмета!", 0xFF0000)
    computer.beep(1000, 0.5)
    return false
end

-- Функция для пополнения баланса с выбором количества
local function depositItems(itemName, damage, quantity)
    if not currentPlayer then
        center(h - 1, "Игрок не обнаружен!", 0xFF0000)
        return false
    end
    
    quantity = tonumber(quantity) or 0
    if quantity <= 0 then
        center(h - 1, "Некорректное количество!", 0xFF0000)
        computer.beep(1000, 0.5)
        return false
    end
    
    local itemPrice = DEPOSIT_PRICES[itemName]
    if not itemPrice then
        center(h - 1, "Этот предмет нельзя сдать!", 0xFF0000)
        computer.beep(1000, 0.5)
        return false
    end
    
    local totalEarned = 0
    local itemsProcessed = 0
    local remainingQuantity = quantity
    
    -- Проверяем каждый слот инвентаря игрока (включая горячую панель)
    for slot = 1, 36 do
        if remainingQuantity <= 0 then break end
        
        local item = pim.getStackInSlot(0, slot)
        if item and item.name == itemName and (item.damage or 0) == damage then
            local amountToProcess = math.min(item.size or 0, remainingQuantity)
            
            if amountToProcess > 0 then
                -- Изъятие предметов у игрока
                local pushSuccess = pim.pushItem(0, slot, amountToProcess)
                if pushSuccess then
                    -- Начисление средств
                    local earned = amountToProcess * itemPrice
                    playerBalance = playerBalance + earned
                    totalEarned = totalEarned + earned
                    itemsProcessed = itemsProcessed + amountToProcess
                    remainingQuantity = remainingQuantity - amountToProcess
                else
                    center(h - 1, "Ошибка изъятия предметов из слота " .. slot, 0xFF0000)
                    computer.beep(1000, 0.5)
                end
            end
        end
    end
    
    if itemsProcessed > 0 then
        balances[currentPlayer] = playerBalance
        saveBalances(balances)
        center(h - 1, string.format("Обработано %d предметов, пополнено: %.3f %s", 
               itemsProcessed, totalEarned, CURRENCY_NAME), 0x00FF00)
        computer.beep(2000, 0.2)
        return true
    end
    
    center(h - 1, "Не удалось обработать предметы!", 0xFFFF00)
    return false
end

-- Обработка событий
local function handleEvent(eventName, ...)
    local args = {...}
    
    if eventName == "interrupted" then
        gpu.setBackground(defBG)
        gpu.setForeground(defFG)
        gpu.fill(1, 1, w, h, " ")
        os.exit()
        return true
    end
    
    -- Вход/выход игрока
    if eventName == "player_on" then
        currentPlayer = args[1]
        playerBalance = balances[currentPlayer] or 0
        state = "MAIN"
        
        -- Обновляем информацию о доступных предметах при заходе игрока
        availableItems = getAvailableItems()
        lastScanTime = os.time()
        
        drawMainScreen()
    elseif eventName == "player_off" then
        state = "GOODBYE"
        goodbyeTimer = computer.uptime()
        drawGoodbyeScreen()
    end
    
    -- Обработка касаний
    if eventName == "touch" and currentPlayer then
        local _, x, y, button = ...
        
        -- Главный экран
        if state == "MAIN" then
            local centerX = math.floor(w/2)
            -- Кнопка покупки
            if y >= 16 and y <= 18 then
                if x >= centerX - 35 and x <= centerX - 5 then
                    state = "BUY"
                    page = 1
                    searchText = ""
                    isSearching = false
                    blinkState = true
                    drawBuyScreen()
                -- Кнопка пополнения баланса
                elseif x >= centerX + 5 and x <= centerX + 35 then
                    state = "DEPOSIT"
                    drawDepositScreen()
                end
            end
        end
        
        -- Экран покупки
        if state == "BUY" then
            -- Активация поиска при клике на строку поиска
            if y == 3 and x >= 4 and x <= w - 4 then
                isSearching = true
                blinkState = true
                lastBlinkTime = computer.uptime()
                drawBuyScreen()
            end
            
            -- Обработка кликов по товарам
            local startY = 6  -- Начало списка товаров (после строки поиска и заголовков)
            local startIdx = (page - 1) * itemsPerPage + 1
            local endIdx = math.min(startIdx + itemsPerPage - 1, #shopItems)
            
            for idx = startIdx, endIdx do
                local shopItem = shopItems[idx]
                local itemIndex = idx - startIdx + 1  -- индекс на странице, начиная с 1
                local itemY = startY + itemIndex + 1  -- координата Y строки товара (с учетом заголовков)
                
                if y == itemY and x >= 3 and x <= w-2 then
                    computer.beep(1500, 0.1)
                    selectedItem = shopItem.item
                    quantityInput = "1"
                    state = "BUY_ITEM"
                    drawBuyItemScreen()
                    return
                end
            end
            
            -- Навигация
            if y >= h - 2 and y <= h then
                if x >= 5 and x <= 15 and page > 1 then
                    page = page - 1
                    drawBuyScreen()
                elseif x >= w - 15 and x <= w - 5 and #shopItems > page * itemsPerPage then
                    page = page + 1
                    drawBuyScreen()
                end
            end
            
            -- Кнопка возврата
            if y == h and x >= w - 10 and x <= w then
                state = "MAIN"
                searchText = ""
                isSearching = false
                drawMainScreen()
            end
        end
        
        -- Экран выбора количества
        if state == "BUY_ITEM" then
            -- Обработка клавиатуры калькулятора
            local keys = {
                {x1=5, y1=11, x2=9, y2=12, value="7"},
                {x1=11, y1=11, x2=15, y2=12, value="8"},
                {x1=17, y1=11, x2=21, y2=12, value="9"},
                {x1=5, y1=14, x2=9, y2=15, value="4"},
                {x1=11, y1=14, x2=15, y2=15, value="5"},
                {x1=17, y1=14, x2=21, y2=15, value="6"},
                {x1=5, y1=17, x2=9, y2=18, value="1"},
                {x1=11, y1=17, x2=15, y2=18, value="2"},
                {x1=17, y1=17, x2=21, y2=18, value="3"},
                {x1=5, y1=20, x2=9, y2=21, value="0"},
                {x1=11, y1=20, x2=15, y2=21, value="С"},
                {x1=17, y1=20, x2=21, y2=21, value="←"}
            }
            
            for _, key in ipairs(keys) do
                if y >= key.y1 and y <= key.y2 and x >= key.x1 and x <= key.x2 then
                    if key.value == "С" then
                        quantityInput = "0"
                    elseif key.value == "←" then
                        if #quantityInput > 0 then
                            quantityInput = quantityInput:sub(1, -2)
                        end
                        if quantityInput == "" then
                            quantityInput = "0"
                        end
                    else
                        -- Убраны ограничения на ввод чисел
                        if quantityInput == "0" then
                            quantityInput = key.value
                        else
                            quantityInput = quantityInput .. key.value
                        end
                    end
                    drawBuyItemScreen()
                    return
                end
            end
            
            -- Кнопка покупки
            if y >= 20 and y <= 22 and x >= 5 and x <= 19 then
                local quantity = tonumber(quantityInput) or 0
                if quantity > 0 then
                    if buyItem(selectedItem.key, quantity) then
                        state = "BUY"
                        drawBuyScreen()
                    end
                end
            end
            
            -- Кнопка отмены
            if y >= 20 and y <= 22 and x >= 25 and x <= 39 then
                state = "BUY"
                drawBuyScreen()
            end
            
            -- Кнопка возврата
            if y == h and x >= w - 10 and x <= w then
                state = "MAIN"
                drawMainScreen()
            end
        end
        
        -- Экран пополнения баланса
        if state == "DEPOSIT" then
            -- Обработка кликов по предметам в инвентаре
            local startY = 7  -- Начало списка предметов
            local startIdx = 1
            
            for idx, item in ipairs(depositItemsList) do
                local itemY = startY + idx + 1  -- координата Y строки предмета
                
                if y == itemY and x >= 3 and x <= w-2 then
                    computer.beep(1500, 0.1)
                    selectedDepositItem = item
                    depositQuantityInput = "0"
                    state = "DEPOSIT_ITEM"
                    drawDepositItemScreen()
                    return
                end
            end
            
            -- Кнопка возврата
            if y == h and x >= w - 10 and x <= w then
                state = "MAIN"
                drawMainScreen()
            end
        end
        
        -- Экран выбора количества для пополнения
        if state == "DEPOSIT_ITEM" then
            -- Обработка клавиатуры калькулятора
            local keys = {
                {x1=5, y1=11, x2=9, y2=12, value="7"},
                {x1=11, y1=11, x2=15, y2=12, value="8"},
                {x1=17, y1=11, x2=21, y2=12, value="9"},
                {x1=5, y1=14, x2=9, y2=15, value="4"},
                {x1=11, y1=14, x2=15, y2=15, value="5"},
                {x1=17, y1=14, x2=21, y2=15, value="6"},
                {x1=5, y1=17, x2=9, y2=18, value="1"},
                {x1=11, y1=17, x2=15, y2=18, value="2"},
                {x1=17, y1=17, x2=21, y2=18, value="3"},
                {x1=5, y1=20, x2=9, y2=21, value="0"},
                {x1=11, y1=20, x2=15, y2=21, value="С"},
                {x1=17, y1=20, x2=21, y2=21, value="←"}
            }
            
            for _, key in ipairs(keys) do
                if y >= key.y1 and y <= key.y2 and x >= key.x1 and x <= key.x2 then
                    if key.value == "С" then
                        depositQuantityInput = "0"
                    elseif key.value == "←" then
                        if #depositQuantityInput > 0 then
                            depositQuantityInput = depositQuantityInput:sub(1, -2)
                        end
                        if depositQuantityInput == "" then
                            depositQuantityInput = "0"
                        end
                    else
                        if depositQuantityInput == "0" then
                            depositQuantityInput = key.value
                        else
                            depositQuantityInput = depositQuantityInput .. key.value
                        end
                    end
                    drawDepositItemScreen()
                    return
                end
            end
            
            -- Кнопка пополнения
            if y >= 20 and y <= 22 and x >= 5 and x <= 19 then
                local quantity = tonumber(depositQuantityInput) or 0
                if quantity > 0 then
                    if depositItems(selectedDepositItem.name, selectedDepositItem.damage, quantity) then
                        state = "DEPOSIT"
                        drawDepositScreen()
                    end
                end
            end
            
            -- Кнопка отмена
            if y >= 20 and y <= 22 and x >= 25 and x <= 39 then
                state = "DEPOSIT"
                drawDepositScreen()
            end
            
            -- Кнопка возврата
            if y == h and x >= w - 10 and x <= w then
                state = "MAIN"
                drawMainScreen()
            end
        end
    end
    
    -- Обработка клавиатуры
    if eventName == "key_down" and currentPlayer then
        local _, char, code = ...
        
        -- Быстрые клавиши в главном меню
        if state == "MAIN" then
            if char == 49 or code == 2 then -- 1
                state = "BUY"
                page = 1
                searchText = ""
                isSearching = false
                blinkState = true
                drawBuyScreen()
            elseif char == 50 or code == 3 then -- 2
                state = "DEPOSIT"
                drawDepositScreen()
            end
        end
        
        -- Навигация в меню покупки
        if state == "BUY" then
            if char == 27 then -- ESC
                state = "MAIN"
                searchText = ""
                isSearching = false
                drawMainScreen()
            elseif char == 97 or code == 30 then -- A/Left
                if page > 1 then
                    page = page - 1
                    drawBuyScreen()
                end
            elseif char == 100 or code == 32 then -- D/Right
                if #shopItems > page * itemsPerPage then
                    page = page + 1
                    drawBuyScreen()
                end
            end
            
            -- Активация/деактивация поиска
            if char == 102 or code == 33 then -- F key
                isSearching = not isSearching
                blinkState = true
                lastBlinkTime = computer.uptime()
                drawBuyScreen()
            end
            
            -- Ввод текста поиска
            if isSearching then
                if char then
                    -- Буквы и цифры
                    if (char >= 65 and char <= 90) or   -- A-Z
                       (char >= 97 and char <= 122) or  -- a-z
                       (char >= 48 and char <= 57) or   -- 0-9
                       char == 32 then                  -- Space
                        searchText = searchText .. string.char(char)
                        page = 1
                        blinkState = true
                        lastBlinkTime = computer.uptime()
                        drawBuyScreen()
                    -- Backspace
                    elseif char == 8 then
                        searchText = searchText:sub(1, -2)
                        page = 1
                        blinkState = true
                        lastBlinkTime = computer.uptime()
                        drawBuyScreen()
                    -- Enter - завершение поиска
                    elseif char == 13 then
                        isSearching = false
                        drawBuyScreen()
                    -- Escape - очистка и выход
                    elseif char == 27 then
                        searchText = ""
                        isSearching = false
                        page = 1
                        drawBuyScreen()
                    end
                end
            end
        end
        
        -- Ввод количества на экране покупки
        if state == "BUY_ITEM" then
            if char >= 48 and char <= 57 then -- Цифры 0-9
                if quantityInput == "0" then
                    quantityInput = string.char(char)
                else
                    quantityInput = quantityInput .. string.char(char)
                end
                drawBuyItemScreen()
            elseif char == 8 then -- Backspace
                if #quantityInput > 0 then
                    quantityInput = quantityInput:sub(1, -2)
                end
                if quantityInput == "" then
                    quantityInput = "0"
                end
                drawBuyItemScreen()
            elseif char == 13 then -- Enter
                local quantity = tonumber(quantityInput) or 0
                if quantity > 0 then
                    if buyItem(selectedItem.key, quantity) then
                        state = "BUY"
                        drawBuyScreen()
                    end
                end
            elseif char == 27 then -- ESC
                state = "BUY"
                drawBuyScreen()
            end
        end
        
        -- Ввод количества на экране пополнения
        if state == "DEPOSIT_ITEM" then
            if char >= 48 and char <= 57 then -- Цифры 0-9
                if depositQuantityInput == "0" then
                    depositQuantityInput = string.char(char)
                else
                    depositQuantityInput = depositQuantityInput .. string.char(char)
                end
                drawDepositItemScreen()
            elseif char == 8 then -- Backspace
                if #depositQuantityInput > 0 then
                    depositQuantityInput = depositQuantityInput:sub(1, -2)
                end
                if depositQuantityInput == "" then
                    depositQuantityInput = "0"
                end
                drawDepositItemScreen()
            elseif char == 13 then -- Enter
                local quantity = tonumber(depositQuantityInput) or 0
                if quantity > 0 then
                    if depositItems(selectedDepositItem.name, selectedDepositItem.damage, quantity) then
                        state = "DEPOSIT"
                        drawDepositScreen()
                    end
                end
            elseif char == 27 then -- ESC
                state = "DEPOSIT"
                drawDepositScreen()
            end
        end
        
        -- Возврат в главное меню
        if char == 113 or code == 16 then -- Q
            state = "MAIN"
            searchText = ""
            isSearching = false
            drawMainScreen()
        end
    end
end

-- Основной цикл
local function main()
    -- Инициализация
    gpu.setBackground(defBG)
    gpu.setForeground(defFG)
    gpu.fill(1, 1, w, h, " ")
    
    center(math.floor(h/2), "Инициализация магазина FAFASTORE...", 0xFFFF00)
    center(math.floor(h/2)+1, "Загрузка данных...", 0xFFFF00)
    
    -- Загрузка данных
    balances = loadBalances()
    availableItems = getAvailableItems()
    lastScanTime = os.time()
    
    -- Основные переменные
    currentPlayer = nil
    playerBalance = 0
    shopItems = {}
    state = "MAIN"
    page = 1
    itemsPerPage = 12
    goodbyeTimer = 0
    searchText = ""
    isSearching = false
    blinkState = true
    lastBlinkTime = computer.uptime()
    local blinkInterval = 0.5
    
    drawMainScreen()
    
    while true do
        local e = {event.pull(0.1)}  -- Уменьшили таймаут для плавного мигания
        
        -- Обновление мигания курсора
        local currentTime = computer.uptime()
        if state == "BUY" and isSearching and (currentTime - lastBlinkTime) >= blinkInterval then
            blinkState = not blinkState
            lastBlinkTime = currentTime
            drawBuyScreen()
        end
        
        -- Проверка присутствия игрока
        if currentPlayer and state ~= "GOODBYE" then
            local invName = pim.getInventoryName()
            if invName ~= currentPlayer then
                state = "GOODBYE"
                goodbyeTimer = computer.uptime()
                drawGoodbyeScreen()
            end
        end
        
        -- Обработка таймера для экрана прощания
        if state == "GOODBYE" then
            local currentTime = computer.uptime()
            local elapsed = currentTime - goodbyeTimer
            
            drawGoodbyeScreen()
            
            if elapsed >= 5 then
                currentPlayer = nil
                playerBalance = 0
                state = "MAIN"
                drawMainScreen()
            end
        end
        
        -- Обработка других событий
        if e[1] then
            handleEvent(table.unpack(e))
        end
    end
end

-- Запуск программы
main()
